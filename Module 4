import pandas as pd

df = pd.read_csv('AAPL.csv', parse_dates=['Date'])
df.sort_values('Date', inplace=True)
df.reset_index(drop=True, inplace=True)

df['Daily Return'] = df['Adj Close'].pct_change()
df['Volatility'] = df['Daily Return'].rolling(window=20).std()
df.dropna(inplace=True)

from sklearn.preprocessing import StandardScaler
features = df[['Daily Return', 'Volatility', 'Volume']]
scaler = StandardScaler()
scaled_features = scaler.fit_transform(features)

from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

wcss = []
for k in range(1, 11):
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(scaled_features)
    wcss.append(kmeans.inertia_)

plt.plot(range(1, 11), wcss, marker='o')
plt.title('Elbow Method')
plt.xlabel('Number of clusters')
plt.ylabel('WCSS')
plt.show()

kmeans = KMeans(n_clusters=3, random_state=42)
df['Cluster'] = kmeans.fit_predict(scaled_features)

cluster_means = df.groupby('Cluster')[['Daily Return', 'Volatility', 'Volume']].mean()
print(cluster_means)
